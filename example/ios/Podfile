# Resolve react_native_pods.rb with node to allow for hoisting
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

source 'https://cdn.cocoapods.org'
source 'https://github.com/bitmovin/cocoapod-specs.git'
source 'https://github.com/react-native-tvos/react-native-tvos-podspecs.git'


prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

def setup os
  platform os, 14.0
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  pod "BitmovinConvivaAnalytics", git: "https://github.com/bitmovin/bitmovin-player-ios-analytics-conviva.git", tag: "3.1.0"
end

target 'BitmovinPlayerReactNativeAnalyticsConvivaExample' do
  setup :ios
end

target 'BitmovinPlayerReactNativeAnalyticsConvivaExample-tvOS' do
  setup :tvos
end

post_install do |installer|
  # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
  config = use_native_modules!
  react_native_post_install(
    installer,
    config[:reactNativePath],
    :mac_catalyst_enabled => false,
    # :ccache_enabled => true
  )

  fix_deployment_target(installer)
  disable_resource_bundle_signing(installer)
end

# Align deployment target of all targets in the Pods project with the main project
def fix_deployment_target(installer)
  return if !installer
  project = installer.pods_project
  project_deployment_target_iOS = project.build_configurations.first.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
  project_deployment_target_tvOS = project.build_configurations.first.build_settings['TVOS_DEPLOYMENT_TARGET']

  project.targets.each do |target|
    target.build_configurations.each do |config|
      old_target_iOS = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      unless old_target_iOS.nil?
        new_target_iOS = project_deployment_target_iOS
        next if old_target_iOS.to_f >= new_target_iOS.to_f
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = new_target_iOS
      end

      old_target_tvOS = config.build_settings['TVOS_DEPLOYMENT_TARGET']
      unless old_target_tvOS.nil?
        new_target_tvOS = project_deployment_target_tvOS
        next if old_target_tvOS.to_f >= new_target_tvOS.to_f
        config.build_settings['TVOS_DEPLOYMENT_TARGET'] = new_target_tvOS
      end
    end
  end
end

# Workaround against required code-signing for resource bundle targets
def disable_resource_bundle_signing(installer)
  installer.pods_project.targets.each do |target|
    target_is_resource_bundle = target.respond_to?(:product_type) && target.product_type == 'com.apple.product-type.bundle'
    target.build_configurations.each do |config|
      if target_is_resource_bundle
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
    end
  end
end
